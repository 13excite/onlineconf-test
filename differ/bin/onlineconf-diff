#!/usr/bin/perl

use strict;
use warnings;
use FindBin;
use lib "$FindBin::Bin/../../client/lib";
use MR::OnlineConf;
use Getopt::Long;
use Test::More;

GetOptions("num" => \my $num);

if ($num) {
    require Convert::Scalar;

    my $equal_nonrefs = \&Test::More::_equal_nonrefs;
    *Test::More::_equal_nonrefs = sub {
        my ($e1, $e2) = @_;
        return if defined $e1 && defined $e2
            && (Convert::Scalar::niok($e1) xor Convert::Scalar::niok($e2));
        goto &$equal_nonrefs;
    };

    my $deep_check = \&Test::More::_deep_check;
    *Test::More::_deep_check = sub {
        my ($e1, $e2) = @_;
        return 0 if defined $e1 && defined $e2 && !ref $e1 && !ref $e2
            && (Convert::Scalar::niok($e1) xor Convert::Scalar::niok($e2));
        goto &$deep_check;
    };
}

my ($old, $new) = @ARGV;
$old .= "/" unless $old =~ /\/$/;
$new .= "/" unless $new =~ /\/$/;

foreach my $ext (qw/conf cdb/) {
    my $old_instance = MR::OnlineConf->_new_instance();
    $old_instance->{$_} = { %{$old_instance->{$_}} } foreach qw/config load cache checks/;
    $old_instance->{config}->{data_dir} = $old;
    $old_instance->{config}->{enable_cdb_client} = $ext eq "cdb";

    my $new_instance = MR::OnlineConf->_new_instance();
    $new_instance->{$_} = { %{$new_instance->{$_}} } foreach qw/config load cache checks/;
    $new_instance->{config}->{data_dir} = $new;
    $new_instance->{config}->{enable_cdb_client} = $ext eq "cdb";

    my @mods = map { /([^\/]+)\.(?:conf|cdb)$/ && $1 } <"$old*.$ext">;
    foreach my $mod (@mods) {
        my $old_module = $old_instance->getModule($mod);
        my $new_module = $new_instance->getModule($mod);
        is_deeply($new_module, $old_module, "$mod.$ext");
    }
}

done_testing();
